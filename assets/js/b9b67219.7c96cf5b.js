"use strict";(self.webpackChunktouchlab=self.webpackChunktouchlab||[]).push([[3],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var o=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,o,a=function(e,r){if(null==e)return{};var t,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return o.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},d=o.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||n;return t?o.createElement(f,i(i({ref:r},u),{},{components:t})):o.createElement(f,i({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,i=new Array(n);i[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<n;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2128:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=t(7462),a=(t(7294),t(3905));const n={sidebar_position:8},i="Troubleshooting",s={unversionedId:"TROUBLESHOOTING",id:"TROUBLESHOOTING",title:"Troubleshooting",description:'Error: "This fat framework already has a binary for architecture x64 (common for target ios_x64)\u201d (or similar for arm)',source:"@site/docs/TROUBLESHOOTING.md",sourceDirName:".",slug:"/TROUBLESHOOTING",permalink:"/KMMBridge/TROUBLESHOOTING",draft:!1,editUrl:"https://github.com/touchlab/KMMBridge/tree/main/website/docs/TROUBLESHOOTING.md",tags:[],version:"current",lastUpdatedBy:"Kevin Galligan",lastUpdatedAt:1673546798,formattedLastUpdatedAt:"Jan 12, 2023",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"iOS Dev Setup",permalink:"/KMMBridge/IOS_DEV_SETUP"},next:{title:"General Documentation",permalink:"/KMMBridge/category/general-documentation"}},l={},c=[{value:"Error: &quot;This fat framework already has a binary for architecture <code>x64</code> (common for target <code>ios_x64</code>)\u201d (or similar for arm)",id:"error-this-fat-framework-already-has-a-binary-for-architecture-x64-common-for-target-ios_x64-or-similar-for-arm",level:3},{value:"Error: &quot;Received status code 422 from server: Unprocessable Entity&quot; when using GitHub Packages",id:"error-received-status-code-422-from-server-unprocessable-entity-when-using-github-packages",level:3}],u={toc:c};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("h3",{id:"error-this-fat-framework-already-has-a-binary-for-architecture-x64-common-for-target-ios_x64-or-similar-for-arm"},'Error: "This fat framework already has a binary for architecture ',(0,a.kt)("inlineCode",{parentName:"h3"},"x64")," (common for target ",(0,a.kt)("inlineCode",{parentName:"h3"},"ios_x64"),")\u201d (or similar for arm)"),(0,a.kt)("p",null,"This is basically saying you have more than one framework defined for the same architecture. This most commonly happens\nbecause the project has both explicit frameworks defined in the kotlin/targets area, and the CocoaPods plugin applied."),(0,a.kt)("p",null,"If you see ",(0,a.kt)("inlineCode",{parentName:"p"},'kotlin("native.cocoapods")')," or ",(0,a.kt)("inlineCode",{parentName:"p"},'id("org.jetbrains.kotlin.native.cocoapods")')," in the plugins:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'plugins {\n    kotlin("multiplatform")\n    kotlin("native.cocoapods") // <--- This\n    id("co.touchlab.faktory.kmmbridge") version "0.3.4"\n}\n')),(0,a.kt)("p",null,"and you see framework declarations for your targets:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"kotlin {\n    iosX64 {\n        binaries.framework()\n    }\n}\n")),(0,a.kt)("p",null,"You have duplicate frameworks being declared. The CocoaPods plugin is adding frameworks automatically for all darwin/Apple\ntargets, so explicitly declaring them is redundant."),(0,a.kt)("h3",{id:"error-received-status-code-422-from-server-unprocessable-entity-when-using-github-packages"},'Error: "Received status code 422 from server: Unprocessable Entity" when using GitHub Packages'),(0,a.kt)("p",null,"If you have multiple repos publishing to the same group and artifact, you'll get this error. Changing the\nartifact name fixes it. See below."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orgs/community/discussions/23474"},"https://github.com/orgs/community/discussions/23474")))}p.isMDXComponent=!0}}]);